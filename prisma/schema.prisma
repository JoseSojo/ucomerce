// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -----------------------------------------// MODELOS
// -----------------------------------------

model Usuario {
  id           String     @id @default(dbgenerated("auth.uid()")) @db.Uuid
  email        String     @unique
  rol          String     @default("cliente") // cliente, vendedor, admin
  nombre       String?
  apellido     String?
  telefono     String?
  empresa      String?
  rfc          String?
  creadoEn     DateTime   @default(now()) @map("creado_en") @db.Timestamptz
  sesiones     Sesion[]
  creditos     Credito[]
  cotizaciones Cotizacion[] @relation("cliente_cotizaciones")
  vendedorEn   Cotizacion[] @relation("vendedor_cotizaciones")

  @@map("usuarios")
}

model Sesion {
  id         String   @id @default(uuid()) @db.Uuid
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId  String   @db.Uuid
  dispositivo String?
  ip         String?
  creadoEn   DateTime @default(now()) @map("creado_en") @db.Timestamptz

  @@map("sesiones")
}

model Categoria {
  id          String     @id @default(uuid()) @db.Uuid
  nombre      String
  descripcion String?
  padre       Categoria? @relation("categoria_hija", fields: [padreId], references: [id])
  padreId     String?    @db.Uuid
  productos   Producto[]
  categorias  Categoria[] @relation("categoria_hija")

  @@map("categorias")
}

model Producto {
  id          String   @id @default(uuid()) @db.Uuid
  nombre      String
  descripcion String?
  precio      Decimal  @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  sku         String   @unique
  categoria   Categoria? @relation(fields: [categoriaId], references: [id])
  categoriaId String?  @db.Uuid
  stock       Int      @default(0)
  imagenUrl   String?  @map("imagen_url")
  activo      Boolean  @default(true)
  creadoEn    DateTime @default(now()) @map("creado_en") @db.Timestamptz
  items       ItemCotizacion[]

  @@map("productos")
}

model Credito {
  id                String   @id @default(uuid()) @db.Uuid
  usuario           Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId         String   @db.Uuid
  limite            Decimal  @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  disponible        Decimal  @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  fechaActualizacion DateTime @default(now()) @map("fecha_actualizacion") @db.Timestamptz
  historial         HistorialCredito[]

  @@map("creditos")
}

model HistorialCredito {
  id          String   @id @default(uuid()) @db.Uuid
  creditoId   String   @db.Uuid
  credito     Credito  @relation(fields: [creditoId], references: [id])
  monto       Decimal  @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  tipo        String
  referencia  String?
  descripcion String?
  creadoEn    DateTime @default(now()) @map("creado_en") @db.Timestamptz

  @@map("historial_credito")
}

model Cotizacion {
  id           String    @id @default(uuid()) @db.Uuid
  cliente      Usuario   @relation("cliente_cotizaciones", fields: [clienteId], references: [id])
  clienteId    String    @db.Uuid
  vendedor     Usuario?  @relation("vendedor_cotizaciones", fields: [vendedorId], references: [id])
  vendedorId   String?   @db.Uuid
  estado       String    @default("borrador")
  subtotal     Decimal   @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  iva          Decimal   @db.Decimal(10, 2) @default(0) // ← Cambiado de Float a Decimal
  total        Decimal   @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  validezDias  Int       @default(30) @map("validez_dias")
  notas        String?
  creadoEn     DateTime  @default(now()) @map("creado_en") @db.Timestamptz
  actualizadoEn DateTime @default(now()) @map("actualizado_en") @db.Timestamptz
  items        ItemCotizacion[]
  documentos   Documento[]

  @@map("cotizaciones")
}

model ItemCotizacion {
  id             String   @id @default(uuid()) @db.Uuid
  cotizacion     Cotizacion @relation(fields: [cotizacionId], references: [id])
  cotizacionId   String   @db.Uuid
  producto       Producto? @relation(fields: [productoId], references: [id])
  productoId     String?  @db.Uuid
  cantidad       Int
  precioUnitario Decimal  @db.Decimal(10, 2) @map("precio_unitario") // ← Cambiado de Float a Decimal
  descuento      Decimal  @db.Decimal(10, 2) @default(0) // ← Cambiado de Float a Decimal
  notas          String?

  @@map("items_cotizacion")
}


model Documento {
  id           String     @id @default(uuid()) @db.Uuid
  cotizacion   Cotizacion @relation(fields: [cotizacionId], references: [id])
  cotizacionId String     @db.Uuid
  url          String
  tipo         String     // cotizacion, factura, orden_compra
  creadoEn     DateTime   @default(now()) @map("creado_en") @db.Timestamptz

  @@map("documentos")
}
