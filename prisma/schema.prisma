// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -----------------------------------------// MODELOS
// -----------------------------------------

model User {
  id           Int     @id @default(autoincrement()) 
  email        String     @unique
  role         String     @default("cliente") // cliente, vendedor, admin
  firstName    String?
  lastName     String?
  phone        String?
  company      String?
  rfc          String?
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamptz
  sessions     Session[]
  credits      Credit[]
  quotations   Quotation[] @relation("customer_quotations")
  sellerIn     Quotation[] @relation("seller_quotations")

  @@map("users")
}

model Session {
  id         Int   @id @default(autoincrement()) 
  user       User     @relation(fields: [userId], references: [id])
  userId     Int   
  device     String?
  ip         String?
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz

  @@map("sessions")
}

model Category {
  id          Int    @id @default(autoincrement()) 
  name        String
  description String?
  parent      Category? @relation("child_category", fields: [parentId], references: [id])
  parentId    Int?    
  products    Product[]
  categories  Category[] @relation("child_category")

  @@map("categories")
}

model Product {
  id          Int   @id @default(autoincrement()) 
  name        String
  description String?
  price       Decimal  @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  sku         String   @unique
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?  
  stock       Int      @default(0)
  imageUrl    String?  @map("image_url")
  active      Boolean  @default(true)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  items       QuotationItem[]

  @@map("products")
}

model Credit {
  id                Int   @id @default(autoincrement()) 
  user              User     @relation(fields: [userId], references: [id])
  userId            Int  
  limit             Decimal  @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  available         Decimal  @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  updatedAt         DateTime @default(now()) @map("updated_at") @db.Timestamptz
  history           CreditHistory[]

  @@map("credits")
}

model CreditHistory {
  id          Int   @id @default(autoincrement()) 
  creditId    Int   
  credit      Credit   @relation(fields: [creditId], references: [id])
  amount      Decimal  @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  type        String
  reference   String?
  description String?
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz

  @@map("credit_history")
}

model Quotation {
  id           Int    @id @default(autoincrement()) 
  customer     User      @relation("customer_quotations", fields: [customerId], references: [id])
  customerId   Int    
  seller       User?     @relation("seller_quotations", fields: [sellerId], references: [id])
  sellerId     Int?   
  status       String    @default("draft")
  subtotal     Decimal   @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  tax          Decimal   @db.Decimal(10, 2) @default(0) // ← Cambiado de Float a Decimal
  total        Decimal   @db.Decimal(10, 2) // ← Cambiado de Float a Decimal
  validityDays Int       @default(30) @map("validity_days")
  notes        String?
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt    DateTime  @default(now()) @map("updated_at") @db.Timestamptz
  items        QuotationItem[]
  documents    Document[]

  @@map("quotations")
}

model QuotationItem {
  id             Int   @id @default(autoincrement()) 
  quotation      Quotation @relation(fields: [quotationId], references: [id])
  quotationId    Int   
  product        Product? @relation(fields: [productId], references: [id])
  productId      Int?  
  quantity       Int
  unitPrice      Decimal  @db.Decimal(10, 2) @map("unit_price") // ← Cambiado de Float a Decimal
  discount       Decimal  @db.Decimal(10, 2) @default(0) // ← Cambiado de Float a Decimal
  notes          String?

  @@map("quotation_items")
}

model Document {
  id           Int     @id @default(autoincrement()) 
  quotation    Quotation  @relation(fields: [quotationId], references: [id])
  quotationId  Int     
  url          String
  type         String     // cotizacion, factura, orden_compra
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamptz

  @@map("documents")
}
